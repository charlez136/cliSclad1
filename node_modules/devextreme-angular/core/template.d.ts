/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { TemplateRef, ViewContainerRef, Renderer2, NgZone } from '@angular/core';
import { DxTemplateHost } from './template-host';
import * as ɵngcc0 from '@angular/core';
export declare const DX_TEMPLATE_WRAPPER_CLASS = "dx-template-wrapper";
export declare class RenderData {
    model: any;
    index: number;
    container: any;
}
export declare class DxTemplateDirective {
    private templateRef;
    private viewContainerRef;
    private renderer;
    private zone;
    dxTemplateOf: any;
    name: string;
    constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef, templateHost: DxTemplateHost, renderer: Renderer2, zone: NgZone);
    private renderTemplate;
    render(renderData: RenderData): any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxTemplateDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DxTemplateDirective, "[dxTemplate]", never, {
    "dxTemplateOf": "dxTemplateOf";
}, {}, never>;
}
export declare class DxTemplateModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxTemplateModule, [typeof DxTemplateDirective], never, [typeof DxTemplateDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxTemplateModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGUuZC50cyIsInNvdXJjZXMiOlsidGVtcGxhdGUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7O0FBY0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JBOzs7O0FBRUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcclxuICogZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqIFZlcnNpb246IDE5LjIuNlxyXG4gKiBCdWlsZCBkYXRlOiBUaHUgSmFuIDMwIDIwMjBcclxuICpcclxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyMCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcclxuICpcclxuICogVGhpcyBzb2Z0d2FyZSBtYXkgYmUgbW9kaWZpZWQgYW5kIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSB0ZXJtc1xyXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxyXG4gKlxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vRGV2RXhwcmVzcy9kZXZleHRyZW1lLWFuZ3VsYXJcclxuICovXHJcbmltcG9ydCB7IFRlbXBsYXRlUmVmLCBWaWV3Q29udGFpbmVyUmVmLCBSZW5kZXJlcjIsIE5nWm9uZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeFRlbXBsYXRlSG9zdCB9IGZyb20gJy4vdGVtcGxhdGUtaG9zdCc7XHJcbmV4cG9ydCBkZWNsYXJlIGNvbnN0IERYX1RFTVBMQVRFX1dSQVBQRVJfQ0xBU1MgPSBcImR4LXRlbXBsYXRlLXdyYXBwZXJcIjtcclxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgUmVuZGVyRGF0YSB7XHJcbiAgICBtb2RlbDogYW55O1xyXG4gICAgaW5kZXg6IG51bWJlcjtcclxuICAgIGNvbnRhaW5lcjogYW55O1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4VGVtcGxhdGVEaXJlY3RpdmUge1xyXG4gICAgcHJpdmF0ZSB0ZW1wbGF0ZVJlZjtcclxuICAgIHByaXZhdGUgdmlld0NvbnRhaW5lclJlZjtcclxuICAgIHByaXZhdGUgcmVuZGVyZXI7XHJcbiAgICBwcml2YXRlIHpvbmU7XHJcbiAgICBkeFRlbXBsYXRlT2Y6IGFueTtcclxuICAgIG5hbWU6IHN0cmluZztcclxuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+LCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmLCB0ZW1wbGF0ZUhvc3Q6IER4VGVtcGxhdGVIb3N0LCByZW5kZXJlcjogUmVuZGVyZXIyLCB6b25lOiBOZ1pvbmUpO1xyXG4gICAgcHJpdmF0ZSByZW5kZXJUZW1wbGF0ZTtcclxuICAgIHJlbmRlcihyZW5kZXJEYXRhOiBSZW5kZXJEYXRhKTogYW55O1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4VGVtcGxhdGVNb2R1bGUge1xyXG59XHJcbiJdfQ==