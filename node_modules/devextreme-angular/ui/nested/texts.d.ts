/*!
 * devextreme-angular
 * Version: 19.2.6
 * Build date: Thu Jan 30 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoTextsComponent extends NestedOption implements OnDestroy {
    fix: string;
    leftPosition: string;
    rightPosition: string;
    unfix: string;
    addRow: string;
    cancelAllChanges: string;
    cancelRowChanges: string;
    confirmDeleteMessage: string;
    confirmDeleteTitle: string;
    deleteRow: string;
    editRow: string;
    saveAllChanges: string;
    saveRowChanges: string;
    undeleteRow: string;
    validationCancelChanges: string;
    exportAll: string;
    exportSelectedRows: string;
    exportTo: string;
    clearFilter: string;
    createFilter: string;
    filterEnabledHint: string;
    groupByThisColumn: string;
    groupContinuedMessage: string;
    groupContinuesMessage: string;
    ungroup: string;
    ungroupAll: string;
    cancel: string;
    emptyValue: string;
    ok: string;
    avg: string;
    avgOtherColumn: string;
    count: string;
    max: string;
    maxOtherColumn: string;
    min: string;
    minOtherColumn: string;
    sum: string;
    sumOtherColumn: string;
    allFields: string;
    columnFields: string;
    dataFields: string;
    filterFields: string;
    rowFields: string;
    columnFieldArea: string;
    dataFieldArea: string;
    filterFieldArea: string;
    rowFieldArea: string;
    collapseAll: string;
    dataNotAvailable: string;
    expandAll: string;
    exportToExcel: string;
    grandTotal: string;
    noData: string;
    removeAllSorting: string;
    showFieldChooser: string;
    sortColumnBySummary: string;
    sortRowBySummary: string;
    total: string;
    addRowToNode: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DxoTextsComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DxoTextsComponent, "dxo-texts", never, {
    "fix": "fix";
    "leftPosition": "leftPosition";
    "rightPosition": "rightPosition";
    "unfix": "unfix";
    "addRow": "addRow";
    "cancelAllChanges": "cancelAllChanges";
    "cancelRowChanges": "cancelRowChanges";
    "confirmDeleteMessage": "confirmDeleteMessage";
    "confirmDeleteTitle": "confirmDeleteTitle";
    "deleteRow": "deleteRow";
    "editRow": "editRow";
    "saveAllChanges": "saveAllChanges";
    "saveRowChanges": "saveRowChanges";
    "undeleteRow": "undeleteRow";
    "validationCancelChanges": "validationCancelChanges";
    "exportAll": "exportAll";
    "exportSelectedRows": "exportSelectedRows";
    "exportTo": "exportTo";
    "clearFilter": "clearFilter";
    "createFilter": "createFilter";
    "filterEnabledHint": "filterEnabledHint";
    "groupByThisColumn": "groupByThisColumn";
    "groupContinuedMessage": "groupContinuedMessage";
    "groupContinuesMessage": "groupContinuesMessage";
    "ungroup": "ungroup";
    "ungroupAll": "ungroupAll";
    "cancel": "cancel";
    "emptyValue": "emptyValue";
    "ok": "ok";
    "avg": "avg";
    "avgOtherColumn": "avgOtherColumn";
    "count": "count";
    "max": "max";
    "maxOtherColumn": "maxOtherColumn";
    "min": "min";
    "minOtherColumn": "minOtherColumn";
    "sum": "sum";
    "sumOtherColumn": "sumOtherColumn";
    "allFields": "allFields";
    "columnFields": "columnFields";
    "dataFields": "dataFields";
    "filterFields": "filterFields";
    "rowFields": "rowFields";
    "columnFieldArea": "columnFieldArea";
    "dataFieldArea": "dataFieldArea";
    "filterFieldArea": "filterFieldArea";
    "rowFieldArea": "rowFieldArea";
    "collapseAll": "collapseAll";
    "dataNotAvailable": "dataNotAvailable";
    "expandAll": "expandAll";
    "exportToExcel": "exportToExcel";
    "grandTotal": "grandTotal";
    "noData": "noData";
    "removeAllSorting": "removeAllSorting";
    "showFieldChooser": "showFieldChooser";
    "sortColumnBySummary": "sortColumnBySummary";
    "sortRowBySummary": "sortRowBySummary";
    "total": "total";
    "addRowToNode": "addRowToNode";
}, {}, never>;
}
export declare class DxoTextsModule {
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<DxoTextsModule, [typeof DxoTextsComponent], never, [typeof DxoTextsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<DxoTextsModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHMuZC50cyIsInNvdXJjZXMiOlsidGV4dHMuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztBQWVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQStEQTs7OztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxyXG4gKiBWZXJzaW9uOiAxOS4yLjZcclxuICogQnVpbGQgZGF0ZTogVGh1IEphbiAzMCAyMDIwXHJcbiAqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxMiAtIDIwMjAgRGV2ZWxvcGVyIEV4cHJlc3MgSW5jLiBBTEwgUklHSFRTIFJFU0VSVkVEXHJcbiAqXHJcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcclxuICogb2YgdGhlIE1JVCBsaWNlbnNlLiBTZWUgdGhlIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBvZiB0aGUgcHJvamVjdCBmb3IgZGV0YWlscy5cclxuICpcclxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXHJcbiAqL1xyXG5pbXBvcnQgeyBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uSG9zdCB9IGZyb20gJ2RldmV4dHJlbWUtYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTmVzdGVkT3B0aW9uIH0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEeG9UZXh0c0NvbXBvbmVudCBleHRlbmRzIE5lc3RlZE9wdGlvbiBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcbiAgICBmaXg6IHN0cmluZztcclxuICAgIGxlZnRQb3NpdGlvbjogc3RyaW5nO1xyXG4gICAgcmlnaHRQb3NpdGlvbjogc3RyaW5nO1xyXG4gICAgdW5maXg6IHN0cmluZztcclxuICAgIGFkZFJvdzogc3RyaW5nO1xyXG4gICAgY2FuY2VsQWxsQ2hhbmdlczogc3RyaW5nO1xyXG4gICAgY2FuY2VsUm93Q2hhbmdlczogc3RyaW5nO1xyXG4gICAgY29uZmlybURlbGV0ZU1lc3NhZ2U6IHN0cmluZztcclxuICAgIGNvbmZpcm1EZWxldGVUaXRsZTogc3RyaW5nO1xyXG4gICAgZGVsZXRlUm93OiBzdHJpbmc7XHJcbiAgICBlZGl0Um93OiBzdHJpbmc7XHJcbiAgICBzYXZlQWxsQ2hhbmdlczogc3RyaW5nO1xyXG4gICAgc2F2ZVJvd0NoYW5nZXM6IHN0cmluZztcclxuICAgIHVuZGVsZXRlUm93OiBzdHJpbmc7XHJcbiAgICB2YWxpZGF0aW9uQ2FuY2VsQ2hhbmdlczogc3RyaW5nO1xyXG4gICAgZXhwb3J0QWxsOiBzdHJpbmc7XHJcbiAgICBleHBvcnRTZWxlY3RlZFJvd3M6IHN0cmluZztcclxuICAgIGV4cG9ydFRvOiBzdHJpbmc7XHJcbiAgICBjbGVhckZpbHRlcjogc3RyaW5nO1xyXG4gICAgY3JlYXRlRmlsdGVyOiBzdHJpbmc7XHJcbiAgICBmaWx0ZXJFbmFibGVkSGludDogc3RyaW5nO1xyXG4gICAgZ3JvdXBCeVRoaXNDb2x1bW46IHN0cmluZztcclxuICAgIGdyb3VwQ29udGludWVkTWVzc2FnZTogc3RyaW5nO1xyXG4gICAgZ3JvdXBDb250aW51ZXNNZXNzYWdlOiBzdHJpbmc7XHJcbiAgICB1bmdyb3VwOiBzdHJpbmc7XHJcbiAgICB1bmdyb3VwQWxsOiBzdHJpbmc7XHJcbiAgICBjYW5jZWw6IHN0cmluZztcclxuICAgIGVtcHR5VmFsdWU6IHN0cmluZztcclxuICAgIG9rOiBzdHJpbmc7XHJcbiAgICBhdmc6IHN0cmluZztcclxuICAgIGF2Z090aGVyQ29sdW1uOiBzdHJpbmc7XHJcbiAgICBjb3VudDogc3RyaW5nO1xyXG4gICAgbWF4OiBzdHJpbmc7XHJcbiAgICBtYXhPdGhlckNvbHVtbjogc3RyaW5nO1xyXG4gICAgbWluOiBzdHJpbmc7XHJcbiAgICBtaW5PdGhlckNvbHVtbjogc3RyaW5nO1xyXG4gICAgc3VtOiBzdHJpbmc7XHJcbiAgICBzdW1PdGhlckNvbHVtbjogc3RyaW5nO1xyXG4gICAgYWxsRmllbGRzOiBzdHJpbmc7XHJcbiAgICBjb2x1bW5GaWVsZHM6IHN0cmluZztcclxuICAgIGRhdGFGaWVsZHM6IHN0cmluZztcclxuICAgIGZpbHRlckZpZWxkczogc3RyaW5nO1xyXG4gICAgcm93RmllbGRzOiBzdHJpbmc7XHJcbiAgICBjb2x1bW5GaWVsZEFyZWE6IHN0cmluZztcclxuICAgIGRhdGFGaWVsZEFyZWE6IHN0cmluZztcclxuICAgIGZpbHRlckZpZWxkQXJlYTogc3RyaW5nO1xyXG4gICAgcm93RmllbGRBcmVhOiBzdHJpbmc7XHJcbiAgICBjb2xsYXBzZUFsbDogc3RyaW5nO1xyXG4gICAgZGF0YU5vdEF2YWlsYWJsZTogc3RyaW5nO1xyXG4gICAgZXhwYW5kQWxsOiBzdHJpbmc7XHJcbiAgICBleHBvcnRUb0V4Y2VsOiBzdHJpbmc7XHJcbiAgICBncmFuZFRvdGFsOiBzdHJpbmc7XHJcbiAgICBub0RhdGE6IHN0cmluZztcclxuICAgIHJlbW92ZUFsbFNvcnRpbmc6IHN0cmluZztcclxuICAgIHNob3dGaWVsZENob29zZXI6IHN0cmluZztcclxuICAgIHNvcnRDb2x1bW5CeVN1bW1hcnk6IHN0cmluZztcclxuICAgIHNvcnRSb3dCeVN1bW1hcnk6IHN0cmluZztcclxuICAgIHRvdGFsOiBzdHJpbmc7XHJcbiAgICBhZGRSb3dUb05vZGU6IHN0cmluZztcclxuICAgIHByb3RlY3RlZCByZWFkb25seSBfb3B0aW9uUGF0aDogc3RyaW5nO1xyXG4gICAgY29uc3RydWN0b3IocGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCwgb3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCk7XHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xyXG59XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIER4b1RleHRzTW9kdWxlIHtcclxufVxyXG4iXX0=